# This is a basic workflow to help you get started with Actions

name: iOS starter workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build and Test default scheme using any available iPhone simulator
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      # - name: Install Dependencies
      #   run: |
      #    cd MeetTogether
      #    pod install --repo-update
      #   shell: bash
        
      # - name: Build
      #   run: |
      #    cd MeetTogether
      #    xcodebuild build -workspace MeetTogether.xcworkspace -scheme MeetTogether clean build -sdk iphoneos CODE_SIGNING_ALLOWED=No

      # - name: Run tests
      #   run: |
      #    cd MeetTogether
      #    xcodebuild test -workspace MeetTogether.xcworkspace -scheme MeetTogether clean build -sdk iphoneos -destination "platform=iOS Simulator,OS=16.2,name=iPhone 14 Pro Max" CODE_SIGNING_ALLOWED=No
     
      - name: Install the certificate
        shell: bash
        env: 
        #   MACOS_CERTIFICATE: ${{ secrets.GAMAPAYCER }}
        #   MACOS_CERTIFICATE_PWD: ${{ secrets.GAMAPAY_PWD }}
        # run: |
        #  echo -n "$GAMAPAYCER" | base64 --decode > gamapayCer_dev.p12
        #  # echo $GAMAPAYCER | base64 --decode > gamapayCer_dev.p12
        #  security create-keychain -p lilytsai build.keychain
        #  security default-keychain -s build.keychain
        #  security unlock-keychain -p lilytsai build.keychain
        #  security import gamapayCer_dev.p12 -k build.keychain -P $GAMAPAYCER_PWD -T /usr/bin/codesign
        #  security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k lilytsai build.keychain
          BUILD_CERTIFICATE_BASE64: ${{ secrets.GAMAPAYCER }}
          P12_PASSWORD: ${{ secrets.GAMAPAY_PWD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > dev.p12
          security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security import dev.p12 -k build.keychain -P Jjialling -T /usr/bin/codesign
          # security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD build.keychain


      - name: Build archive
        run: |
          cd MeetTogether
          xcodebuild -scheme MeetTogether \
          -archivePath $RUNNER_TEMP/MeetTogether.xcarchive \
          -sdk iphoneos \
          -configuration Debug \
          -destination generic/platform=iOS \
          clean archive          

      - name: Export ipa
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/iamgroot.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build          
     
      
      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{ runner.temp }}/build/MeetTogether.ipa
          # you can also archive the entire directory 
          # path: ${{ runner.temp }}/build
          retention-days: 3
